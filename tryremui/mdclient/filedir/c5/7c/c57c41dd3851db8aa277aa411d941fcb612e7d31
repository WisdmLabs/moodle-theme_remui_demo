<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=Windows-1254">
<meta name=ProgId content=PowerPoint.Slide>
<meta name=Generator content="Microsoft PowerPoint 12">
<link id=Main-File rel=Main-File
href="../Chapter_2_Boolean_Algebra_and_Logic_Gates.htm">
<link rel=Preview href=preview.wmf>
<meta name=Robots content=NoIndex>
<script src=script.js></script><script><!--
if( !(IsWin("PPTOtl")||IsWin("PPTNav")||IsWin("PPTOtlNav")) )
{
	obj = GetObj("Main-File")
	parent.location.href=obj.href
}
var gOtlHiliteClr="#ffffff",gOtlNormalClr="#000000",gOtlActiveClr="#ffff00",gSelected="",gTxtState=false,gChildEntryTable=new Array()
function Load()
{
	if( IsWin("PPTOtl" ) ){ LoadOtl(); parent.gOtlLoaded=true; return }
	if( g_supportsPPTHTML ) {
		if( IsWin("PPTNav" ) ){ LoadNav("NavObj",UpdNav); parent.gNavLoaded=true; return }
		if( IsWin("PPTOtlNav" ) ){ LoadNav("OtlNavObj",UpdOtlNav); parent.gOtlNavLoaded=true; return }
	}
}
function Upd(){ if( IsWin("PPTNav") ) LoadNav("NavObj",UpdNav) }
function LoadNav( oId,UpdFunc )
{
	document.ondragstart=CancelDrag
	document.onselectstart=CancelDrag
	document.body.style.margin=2
	UpdFunc()
	obj=document.all.item(oId)
	obj.style.display="block"
	obj.style.visibility="visible"
	document.bgColor="threedface"
	if( parent.frames["PPTNts"] )
		notesBtn.style.display = ""
	if( parent.gHasNarration )
		nb_voiceBorder.style.display = ""
}
function LoadOtl()
{
	var otl=GetObj("OtlObj")
	otl.style.display="block"
	otl.style.visibility="visible"
	if( gOtlActiveClr == "" ) gOtlActiveClr=document.linkColor
	if( gOtlHiliteClr == "" ) gOtlHiliteClr=document.fgColor
	if( gOtlNormalClr == "" )
		gOtlNormalClr=document.bgColor
	else
		document.bgColor=gOtlNormalClr
	InitArray()
	if( ObjExists( parent.gCurSld ) ) {
		ChangeState( parent.gCurSld,gOtlNormalClr,gOtlHiliteClr )
		gSelected=parent.gCurSld
	}
	else gSelected = -1
	UpdOtl()
}
function UpdOtl(){ UpdIdx(parent.gCurSld) }
function UpdIdx( idx )
{
	if( gSelected != idx ) {
		if( gSelected > 0 )
			ChangeState( gSelected,gOtlHiliteClr,gOtlNormalClr )
		if( ObjExists( idx ) ) {
			gSelected = idx
			ChangeState( gSelected,gOtlNormalClr,gOtlHiliteClr )
		}
		else gSelected = -1
	}
	if( gTxtState != parent.gOtlTxtExp ) {
		state = "block"
		if( !parent.gOtlTxtExp )
			state="none"
		for(ii=0; ii<gChildEntryTable.length; ii++) {
			obj=gChildEntryTable[ii];
			if( obj.id == null ) continue;
			if( obj.id.indexOf("PPTC") >= 0 )
				obj.style.display=state;
		}
		gTxtState=parent.gOtlTxtExp
		if( ObjExists( gSelected ) )
			ChangeState( gSelected,gOtlNormalClr,gOtlHiliteClr )
	}
}
function InitArray()
{
	count=0
	var list=GetTags(document,"DIV");
	for(ii=0; ii<list.length; ii++) {
		obj=list.item(ii)
		if( obj.id == null ) continue
		if( obj.id.indexOf("PPTC") >= 0 )
			gChildEntryTable[count++]=obj
	}
}
function ChangeState( idx,fgColor,bgColor )
{
	obj=GetObj("PPTL"+idx)
	obj.style.color=fgColor
	obj=GetObj("PPTP"+idx)
	obj.style.backgroundColor=bgColor
}
function ChgClr( o,clr ){ if( o.id != "PPTL"+gSelected ) o.style.color=clr }
function Over( src ){ ChgClr(GetLink(src),gOtlActiveClr) }
function Out( src ){ ChgClr(GetLink(src),gOtlHiliteClr) }
function Follow(src){ window.location.href = GetLink(src).href; }
function ObjExists( ii ) { obj=GetObj("PPTP"+ii ); return( obj ) }
function GoToSld( href ){ UpdIdx(parent.GetSldNum(href)); parent.GoToSld( href ) }
function CancelDrag(){ window.event.cancelBubble=true;window.event.returnValue=false}
function GetLink(src)
{
   if(src.tagName=="A") return src
   else return GetTags(src,"A").item(0)
}
function UpdNav()
{
	txt = "<center>";
	if( parent.GetHrefObj( parent.gCurSld ).mOrigVis == 1 )
		txt += "Slide " + parent.GetCurSldNum() + " of " + parent.GetNumSlds()
	else
		txt += "Hidden Slide"
	txt += "</center>";
	nav_text.innerHTML = txt;
	if( !parent.HasPrevSld() )
		gBtnArr["nb_prev"].Enabled(0)
	else
		gBtnArr["nb_prev"].Enabled(1)
	if( !parent.HasNextSld() )
		gBtnArr["nb_next"].Enabled(0)
	else
		gBtnArr["nb_next"].Enabled(1)
	gBtnArr["nb_nts"].Enabled(1)
	gBtnArr["nb_ntsBorder"].SetFlag( parent.gHasNts )
	gBtnArr["nb_sldshw"].Enabled(1)
	gBtnArr["nb_voice"].Enabled(1)
}
function ExecBtn()
{
	if (event.keyCode == 13)
	{
		BtnOnDown();
		BtnOnUp();
	}
}
function UpdOtlNav()
{
	gBtnArr["nb_otl"].SetEnabled();
	if( parent.gOtlOpen )
		gBtnArr["nb_otlTxt"].Enabled( true );
	else
		document.all.item("nb_otlTxtBorder").style.visibility = "hidden";
}

//--></script>
<style>
<!--.PTxt
	{position:relative;
	width:100%;
	margin-top:5px;
	padding-left:2px;
	font-weight:bold;}
.CTxt
	{position:relative;
	width:100%;
	margin-top:5px;}
a
	{color:white;
	text-decoration:none;}
ul
	{color:white;
	margin-bottom:0px;
	margin-left:20px;}
.sldNum
	{margin-top:5px;
	color:white;}
.button
	{position:absolute;
	width:32px;
	height:20px;
	border-style:solid;
	border-width:1px;
	border-color:threedface;}
-->
</style>
</head>

<body onload="Load()" style='margin:2px'>

<div id=NavObj onload="Load()" onmouseover="BtnOnOver()"
onmousedown="BtnOnDown()" onmouseout="BtnOnOut()" onmouseup="BtnOnUp()"
onkeypress="ExecBtn()" style='display:none;visibility:hidden'>
<table id="notesBtn" style='display:none;position:relative;width:55px' align=left cellpadding=0
 cellspacing=0>
 <td nowrap>
 <div id="nb_ntsElem" title="Show/Hide
Notes" align=center style='position:relative;margin-left:5px;margin-right:5px;padding:3px;
 font-family:Arial;color:buttontext;font-size:9pt; cursor:default'>
 <img src="notes_flag.gif" id="nb_nts" style='display:none'> &nbsp;Notes</div>
 <div id="nb_ntsBorder" title ="Show/Hide
Notes" onfocus="BtnOnOver()" onblur="BtnOnOut()" TABINDEX=1 style='position:absolute;top:0%;left:0%;width:100%;height:20px'>

 </div>
 </td>
</table>


<table style='position:relative;width:70px' align=right cellpadding=0 cellspacing=0>
 <td nowrap>
 <div id="nb_sldshwText" title="Full Screen Slide Show" align=center style='position:relative;margin-left:20px;padding:3px;
 font-family:Arial;color:buttontext;font-size:9pt;cursor:default'>Slide
Show</div>
 <div id="nb_sldshwBorder" title="Full Screen Slide Show" onfocus="BtnOnOver()" onblur="BtnOnOut()" TABINDEX=5 style='position:absolute;top:0%;left:0%;width:100%;height:20px'>
 <div style='position:absolute;clip:rect(0px, 18px, 18px, 0px)'><img
 src="buttons.gif" id="nb_sldshw" style='position:relative;left:-254px'></div>
 </div>
 </td>
 <td>
 <div id="nb_voiceBorder" style='display:none;position:absolute;top:0;left:-40px;
 width:20px;height:20px' onfocus="BtnOnOver()" onblur="BtnOnOut()" TABINDEX=4 class=button>
 <div style='position:absolute;clip:rect(0px, 18px, 18px, 0px)'><img
 src="buttons.gif" id="nb_voice" title="Pause/Play Narration" style='position:
 relative;left:-290px'></div>
 </div>
 </td>
</table>

<table style='position:relative' align=center cellpadding=0 cellspacing=0>
 <td nowrap>
 <div id="nb_prevBorder" onfocus="BtnOnOver()" onblur="BtnOnOut()" TABINDEX=2 class=button style='left:-30px'>
 <div style='position:absolute;clip:rect(0px, 30px, 18px, 0px)'><img
 src="buttons.gif" id="nb_prev" title="Previous Slide" style='position:relative;
 left:0px'></div>
 </div>
 <span id="nav_text" style='position:relative;top:3px;width:100px;font-family:
 Arial;color:buttontext;font-size:9pt'></span>
 <div id="nb_nextBorder" onfocus="BtnOnOver()" onblur="BtnOnOut()" TABINDEX=3 class=button>
 <div style='position:absolute;clip:rect(0px, 30px, 18px, 0px)'><img
 src="buttons.gif" id="nb_next" title="Next Slide" style='position:relative;
 left:-90px'></div>
 </div>
 </td>
</table>
</div>

<div id=OtlNavObj onload="Load()" onmouseover="BtnOnOver()"
onmousedown="BtnOnDown()" onmouseout="BtnOnOut()" onmouseup="BtnOnUp()"
onkeypress="ExecBtn()" style='display:none;visibility:hidden'>

<table style='position:relative;width:70px' align=left cellpadding=0 cellspacing=0>
 <td nowrap><div title="Show/Hide
Outline" id="nb_otl" onfocus="BtnOnOver()" onblur="BtnOnOut()" TABINDEX=11
 style='position:absolute;top:0%;left:0%;width:100%;height:100%;cursor:default'>
 <div id="nb_otlElem" align=center style='position:relative;padding:3px;font-family:Arial;
 color:buttontext;font-size:9pt'>Outline</div></div>
 </td>
</table>

<table style='position:relative' align=center cellpadding=0 cellspacing=0>
 <td>
 <div style='position:absolute;left:-18px;width:24px;height:20px;border-style:
 solid;border-width:1px;border-color:threedface' onfocus="BtnOnOver()" onblur="BtnOnOut()" TABINDEX=12 id="nb_otlTxtBorder">
 <div style='position:absolute;clip:rect(0px, 22px, 18px, 0px)'><img
 src=buttons.gif id="nb_otlTxt" title="Expand/Collapse Outline"
 style='position:relative;left:-157px'></div>
 </div>
 </td>
</table>

</div>

<div id=OtlObj style='display:none;visibility:hidden;'>


<table width="100%" style='font-family:Arial;font-size:9pt'>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>1</font></div>
  </td>
  <td width="100%">
  <div id=PPTP1 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0001.htm');" id=PPTL1>Digital Logic Design I<br>
    <span style='mso-spacerun:yes'> </span>Boolean Algebra and Logic Gate</a></font></div>
  <div id=PPTC1 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Mustafa Kemal Uyguroðlu</li>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>2</font></div>
  </td>
  <td>
  <div id=PPTP2 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0009.htm');" id=PPTL2>Algebras</a></font></div>
  <div id=PPTC2 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>What is an algebra?</li>
   <ul>
    <li>Mathematical system consisting of</li>
    <ul>
     <li>Set of elements</li>
     <li>Set of operators</li>
     <li>Axioms or postulates</li>
    </ul>
   </ul>
   <li>Why is it important?</li>
   <ul>
    <li>Defines rules of calculations</li>
   </ul>
   <li>Example: arithmetic on natural numbers</li>
   <ul>
    <li>Set of elements: N = {1,2,3,4,}</li>
    <li>Operator: +, , *</li>
    <li>Axioms: associativity, distributivity, closure, identity elements, etc.</li>
   </ul>
   <li>Note: operators with two inputs are called binary</li>
   <ul>
    <li>Does not mean they are restricted to binary numbers!</li>
    <li>Operator(s) with one input are called unary</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>3</font></div>
  </td>
  <td>
  <div id=PPTP3 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0086.htm');" id=PPTL3>BASIC DEFINITIONS</a></font></div>
  <div id=PPTC3 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>A set is collection of having the same property.</li>
   <ul>
    <li>S: set, x and y: element or event</li>
    <li>For example: S = {1, 2, 3, 4}</li>
    <ul>
     <li>If x = 2, then xÎS.</li>
     <li>If y = 5, then y <font face=Symbol>Ï</font><font face=Arial>S.</font></li>
    </ul>
   </ul>
   <li>A binary operator defines on a set S of elements is a rule that assigns,
       to each pair of elements from S, a unique element from S.</li>
   <ul>
    <li>For example: given a set S, consider a*b = c and * is a binary
        operator.</li>
    <li>If (a, b) through * get c and a, b, cÎS, then * is a binary operator of
        S.</li>
    <li>On the other hand, if * is not a binary operator of S and a, bÎS, then c
        <font face=Symbol>Ï</font><font face=Arial> S.</font></li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>4</font></div>
  </td>
  <td>
  <div id=PPTP4 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0087.htm');" id=PPTL4>BASIC DEFINITIONS</a></font></div>
  <div id=PPTC4 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>The most common postulates used to formulate various algebraic
       structures are as follows:</li>
   <li>Closure: a set S is closed with respect to a binary operator if, for
       every pair of elements of S, the binary operator specifies a rule for
       obtaining a unique element of S.</li>
   <ul>
    <li>For example, natural numbers N={1,2,3,...} is closed w.r.t. the binary
        operator + by the rule of arithmetic addition, since, for any a, bÎN,
        there is a unique cÎN such that</li>
    <ul>
     <li>a+b = c</li>
     <li>But operator  is not closed for N, because 2-3 = -1 and 2, 3 ÎN, but
         (-1)<font face=Symbol>Ï</font><font face=Arial>N.</font></li>
    </ul>
   </ul>
   <li>Associative law: a binary operator * on a set S is said to be
       associative whenever</li>
   <ul>
    <li>(x * y) * z = x * (y * z) for all x, y, zÎS</li>
    <ul>
     <li>(x+y)+z = x+(y+z)</li>
    </ul>
   </ul>
   <li>Commutative law: a binary operator * on a set S is said to be
       commutative whenever</li>
   <ul>
    <li>x * y = y * x for all x, yÎS</li>
    <ul>
     <li>x+y = y+x</li>
    </ul>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>5</font></div>
  </td>
  <td>
  <div id=PPTP5 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0088.htm');" id=PPTL5>BASIC DEFINITIONS</a></font></div>
  <div id=PPTC5 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Identity element: a set S is said to have an identity element with
       respect to a binary operation * on S if there exists an element eÎS with
       the property that</li>
   <ul>
    <li>e * x = x * e = x for every xÎS</li>
    <ul>
     <li>0+x = x+0 =x for every xÎI . I = {, -3, -2, -1, 0, 1, 2, 3, }.</li>
     <li>1*x = x*1 =x for every xÎI. I = {, -3, -2, -1, 0, 1, 2, 3, }.</li>
    </ul>
   </ul>
   <li>Inverse: a set having the identity element e with respect to the binary
       operator to have an inverse whenever, for every xÎS, there exists an
       element yÎS such that</li>
   <ul>
    <li>x * y = e</li>
    <ul>
     <li>The operator + over I, with e = 0, the inverse of an element a is (-a),
         since a+(-a) = 0.</li>
    </ul>
   </ul>
   <li>Distributive law: if * and &#65294;are two binary operators on a set S,
       * is said to be distributive over . whenever</li>
   <ul>
    <li>x * (y&#65294;z) = (x * y)&#65294;(x * z)</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>6</font></div>
  </td>
  <td>
  <div id=PPTP6 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0010.htm');" id=PPTL6>George Boole</a></font></div>
  <div id=PPTC6 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Father of Boolean algebra</li>
   <li>He came up with a type of linguistic algebra, the three most basic
       operations of which were (and still are) AND, OR and NOT. It was these
       three functions that formed the basis of his premise, and were the only
       operations necessary to perform comparisons or basic mathematical
       functions.</li>
   <li>Booles system (detailed in his 'An Investigation of the Laws of
       Thought, on Which Are Founded the Mathematical Theories of Logic and
       Probabilities', 1854) was based on a binary approach, processing only
       two objects - the yes-no, true-false, on-off, zero-one approach.</li>
   <li>Surprisingly, given his standing in the academic community, Boole's idea
       was either criticized or completely ignored by the majority of his
       peers.</li>
   <li>Eventually, one bright student, Claude Shannon (1916-2001),<span
       style='mso-spacerun:yes'>  </span>picked up the idea and ran with it</li>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>7</font></div>
  </td>
  <td>
  <div id=PPTP7 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0015.htm');" id=PPTL7>Axiomatic Definition of Boolean
  Algebra</a></font></div>
  <div id=PPTC7 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>We need to define algebra for binary values</li>
   <ul>
    <li>Developed by George Boole in 1854</li>
   </ul>
   <li>Huntington postulates for Boolean algebra (1904):</li>
   <li>B = {0, 1} and two binary operations, + and&#65294;</li>
   <ul>
    <li>Closure with respect to operator + and operator ·</li>
    <li>Identity element 0 for operator + and 1 for operator ·</li>
    <li>Commutativity with respect to + and ·</li>
    <ul>
     <li>		x+y = y+x,<span style='mso-spacerun:yes'>   </span>x·y = y·x</li>
    </ul>
    <li>Distributivity of · over +,<span style='mso-spacerun:yes'>  </span>and
        + over ·</li>
    <li>		 x·(y+z) = (x·y)+(x·z)<span style='mso-spacerun:yes'>  
        </span>and<span style='mso-spacerun:yes'>   </span>x+(y·z) =
        (x+y)·(x+z)</li>
    <ul>
     <ul>
      <ul>
       <li>Complement for every element x is x with x+x=1,<span
           style='mso-spacerun:yes'>  </span>x·x=0</li>
      </ul>
     </ul>
    </ul>
    <li>There are at least two elements x,y<font face=Symbol>Î</font><font
        face=Arial>B such that<span style='mso-spacerun:yes'>  </span>x</font><font
        face=Symbol>¹</font><font face=Arial>y</font></li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>8</font></div>
  </td>
  <td>
  <div id=PPTP8 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0052.htm');" id=PPTL8>Boolean Algebra</a></font></div>
  <div id=PPTC8 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Terminology:</li>
   <ul>
    <li>Literal: A variable or its complement</li>
    <li>Product term: literals connected by </li>
    <li>Sum term: literals connected by +</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>9</font></div>
  </td>
  <td>
  <div id=PPTP9 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0089.htm');" id=PPTL9>Postulates of Two-Valued
  Boolean Algebra</a></font></div>
  <div id=PPTC9 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>B = {0, 1} and two binary operations, + and&#65294;</li>
   <li>The rules of operations: AND&#12289;OR and NOT.</li>
   <br>
   <br>
   <br>
   <br>
   <br>
   <br>
   <br>
   <br>
   <li>Closure (+ and&#8231;)</li>
   <li>The identity elements</li>
   <ul>
    <li>(1) +: 0</li>
    <li>(2)&#65294;: 1</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>10</font></div>
  </td>
  <td>
  <div id=PPTP10 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0090.htm');" id=PPTL10>Postulates of
  Two-Valued Boolean Algebra</a></font></div>
  <div id=PPTC10 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>The commutative laws</li>
   <li>The distributive laws</li>
   <br>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>11</font></div>
  </td>
  <td>
  <div id=PPTP11 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0091.htm');" id=PPTL11>Postulates of
  Two-Valued Boolean Algebra</a></font></div>
  <div id=PPTC11 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Complement</li>
   <ul>
    <li>x+x'=1 &#8594; 0+0'=0+1=1; 1+1'=1+0=1</li>
    <li>x&#65294;x'=0 &#8594; 0&#65294;0'=0&#65294;1=0; 1&#65294;1'=1&#65294;0=0</li>
   </ul>
   <li>Has two distinct elements 1 and 0, with 0 &#8800; 1</li>
   <li></li>
   <li>Note</li>
   <ul>
    <li>A set of two elements</li>
    <li>+ : OR operation; &#65294;: AND operation</li>
    <li>A complement operator: NOT operation</li>
    <li>Binary logic is a two-valued Boolean algebra</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>12</font></div>
  </td>
  <td>
  <div id=PPTP12 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0134.htm');" id=PPTL12>Duality</a></font></div>
  <div id=PPTC12 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>The principle of duality is an important concept.<span
       style='mso-spacerun:yes'>  </span>This says that if an expression is
       valid in Boolean algebra, the dual of that expression is also valid.</li>
   <li>To form the dual of an expression, replace all + operators with .
       operators, all . operators with + operators, all ones with zeros, and
       all zeros with ones.</li>
   <li>Form the dual of the expression</li>
   <ul>
    <li>a + (bc) = (a + b)(a + c)</li>
   </ul>
   <li>Following the replacement rules</li>
   <ul>
    <li>a(b + c) = ab + ac</li>
   </ul>
   <li>Take care not to alter the location of the parentheses if they are
       present.</li>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>13</font></div>
  </td>
  <td>
  <div id=PPTP13 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0055.htm');" id=PPTL13>Basic Theorems</a></font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>14</font></div>
  </td>
  <td>
  <div id=PPTP14 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0059.htm');" id=PPTL14>Boolean Theorems</a></font></div>
  <div id=PPTC14 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Huntingtons postulates define some rules</li>
   <br>
   <br>
   <br>
   <br>
   <li>Need more rules to modify</li>
   <li>	algebraic expressions</li>
   <ul>
    <li>Theorems that are derived from postulates</li>
   </ul>
   <li>What is a theorem?</li>
   <ul>
    <li>A formula or statement that is derived from postulates (or other proven
        theorems)</li>
   </ul>
   <li>Basic theorems of Boolean algebra</li>
   <ul>
    <li>Theorem 1 (a): x + x = x<span style='mso-spacerun:yes'>   </span>(b): x
        · x = x</li>
    <li>Looks straightforward, but needs to be proven !</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>15</font></div>
  </td>
  <td>
  <div id=PPTP15 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0060.htm');" id=PPTL15>Proof of x+x=x</a></font></div>
  <div id=PPTC15 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>We can only use<br>
              Huntington postulates:</li>
   <br>
   <br>
   <br>
   <ul>
    <ul>
     <br>
    </ul>
   </ul>
   <li>Show that x+x=x.</li>
   <ul>
    <li>		<span style='mso-spacerun:yes'>   </span>x+x 	= (x+x)·1 	by 2(b)</li>
    <li>			= (x+x)(x+x)	by 5(a)</li>
    <li>			= x+xx		by 4(b)</li>
    <li>			= x+0		by 5(b)</li>
    <li>			= x		by 2(a)</li>
    <li>			<span style='mso-spacerun:yes'>   </span>Q.E.D.</li>
   </ul>
   <li>We can now use Theorem 1(a) in future proofs</li>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>16</font></div>
  </td>
  <td>
  <div id=PPTP16 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0061.htm');" id=PPTL16>Proof of x·x=x</a></font></div>
  <div id=PPTC16 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Similar to previous <br>
              proof</li>
   <br>
   <br>
   <br>
   <br>
   <br>
   <li>Show that x·x = x.</li>
   <ul>
    <li>		<span style='mso-spacerun:yes'>   </span>x·x 	= xx+0 		by 2(a)</li>
    <li>			= xx+xx	by 5(b)</li>
    <li>			= x(x+x)	by 4(a)</li>
    <li>			= x·1		by 5(a)</li>
    <li>			= x		by 2(b)</li>
    <li>			<span style='mso-spacerun:yes'>   </span>Q.E.D.</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>17</font></div>
  </td>
  <td>
  <div id=PPTP17 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0092.htm');" id=PPTL17>Proof of x+1=1</a></font></div>
  <div id=PPTC17 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Theorem 2(a): x + 1 = 1</li>
   <li>	x + 1 = 1&#65294;(x + 1)<span style='mso-spacerun:yes'>    </span>by 2(b)</li>
   <ul>
    <li>		=(x + x')(x + 1)		5(a)</li>
    <li>		= x + x' 1		4(b)</li>
    <li>		= x + x' 			2(b)</li>
    <li><span style='mso-spacerun:yes'>  </span>		= 1			5(a)</li>
   </ul>
   <li>Theorem 2(b): x&#65294;0 = 0	by duality</li>
   <li>Theorem 3: (x')' = x</li>
   <ul>
    <li>Postulate 5 defines the complement of x, x + x' = 1 and x x' = 0</li>
    <li>The complement of x' is x is also (x')'</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>18</font></div>
  </td>
  <td>
  <div id=PPTP18 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0056.htm');" id=PPTL18><span
  style='mso-spacerun:yes'> </span>Absorption Property (Covering)</a></font></div>
  <div id=PPTC18 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Theorem 6(a): x + xy = x</li>
   <ul>
    <li>x + xy = x&#65294;1 + xy<span style='mso-spacerun:yes'>    </span>by 2(b)</li>
    <li>	= x (1 + y) 	<span style='mso-spacerun:yes'>          </span>4(a)</li>
    <li>	= x (y + 1)	<span style='mso-spacerun:yes'>          </span>3(a)</li>
    <li>	= x&#65294;1		<span style='mso-spacerun:yes'>      </span>Th 2(a)</li>
    <li>	= x		<span style='mso-spacerun:yes'>          </span>2(b)</li>
   </ul>
   <br>
   <li>Theorem 6(b): x (x + y) = x	by duality</li>
   <li>By means of truth table (another way to proof )</li>
   <br>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>19</font></div>
  </td>
  <td>
  <div id=PPTP19 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0135.htm');" id=PPTL19><span
  style='mso-spacerun:yes'> </span>DeMorgans Theorem</a></font></div>
  <div id=PPTC19 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Theorem 5(a): (x + y) = xy</li>
   <li>Theorem 5(b): (xy) = x + y</li>
   <li>By means of truth table</li>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>20</font></div>
  </td>
  <td>
  <div id=PPTP20 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0057.htm');" id=PPTL20><span
  style='mso-spacerun:yes'> </span>Consensus Theorem</a></font></div>
  <div id=PPTC20 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>xy + xz + yz = xy + xz</li>
   <li>(x+y)(x+z)(y+z) = (x+y)(x+z)<span style='mso-spacerun:yes'> 
       </span>-- (dual)</li>
   <li>Proof:<br>
              xy + xz + yz = xy + xz + (x+x)yz<br>
              			= xy + xz + xyz + xyz<br>
              			= (xy + xyz) + (xz + xzy)<br>
              			= xy + xz<br>
              QED (2 true by duality).</li>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>21</font></div>
  </td>
  <td>
  <div id=PPTP21 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0093.htm');" id=PPTL21>Operator Precedence</a></font></div>
  <div id=PPTC21 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>The operator precedence for evaluating Boolean Expression is</li>
   <ul>
    <li>Parentheses</li>
    <li>NOT</li>
    <li>AND</li>
    <li>OR</li>
   </ul>
   <li>Examples</li>
   <ul>
    <li>x y' + z</li>
    <li>(x y + z)'</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>22</font></div>
  </td>
  <td>
  <div id=PPTP22 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0094.htm');" id=PPTL22>	Boolean Functions</a></font></div>
  <div id=PPTC22 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>A Boolean function</li>
   <ul>
    <li>Binary variables</li>
    <li>Binary operators OR and AND</li>
    <li>Unary operator NOT</li>
    <li>Parentheses</li>
   </ul>
   <li>Examples</li>
   <ul>
    <li>F<sub>1</sub>= x y z'</li>
    <li>F<sub>2</sub> = x + y'z</li>
    <li>F<sub>3 </sub><span style='mso-spacerun:yes'> </span>= x' y' z + x' y z
        + x y'</li>
    <li>F<sub>4</sub> = x y' + x' z</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>23</font></div>
  </td>
  <td>
  <div id=PPTP23 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0095.htm');" id=PPTL23>Boolean Functions</a></font></div>
  <div id=PPTC23 class=CTxt style='display:none'><font size=2>
  <ul>
   <ul>
    <li>The truth table of 2<sup>n </sup>entries</li>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
   </ul>
   <li><sup><span style='mso-spacerun:yes'> </span></sup>Two Boolean
       expressions may specify the same function</li>
   <ul>
    <li>F<sub>3 </sub>= F<sub>4</sub></li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>24</font></div>
  </td>
  <td>
  <div id=PPTP24 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0096.htm');" id=PPTL24>Boolean Functions</a></font></div>
  <div id=PPTC24 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Implementation with logic gates</li>
   <ul>
    <li>F<sub>4</sub> is more economical</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>25</font></div>
  </td>
  <td>
  <div id=PPTP25 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0097.htm');" id=PPTL25>Algebraic Manipulation</a></font></div>
  <div id=PPTC25 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>To minimize Boolean expressions</li>
   <ul>
    <li>Literal: a primed or unprimed variable (an input to a gate)</li>
    <li>Term: an implementation with a gate</li>
    <li>The minimization of the number of literals and the number of terms &#8594;
        a circuit with less equipment</li>
    <li>It is a hard problem (no specific rules to follow)</li>
   </ul>
   <li>Example 2.1</li>
   <ul>
    <li>x(x'+y) = xx' + xy = 0+xy = xy</li>
    <li>x+x'y = (x+x')(x+y) = 1 (x+y) = x+y</li>
    <li>(x+y)(x+y') = x+xy+xy'+yy' = x(1+y+y') = x</li>
    <li>xy + x'z + yz = xy + x'z + yz(x+x') = xy + x'z + yzx + yzx' = xy(1+z) +
        x'z(1+y) = xy +x'z</li>
    <li>(x+y)(x'+z)(y+z) = (x+y)(x'+z), by duality from function 4. (consensus
        theorem with duality)</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>26</font></div>
  </td>
  <td>
  <div id=PPTP26 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0098.htm');" id=PPTL26>Complement of a
  Function</a></font></div>
  <div id=PPTC26 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>An interchange of 0's for 1's and 1's for 0's in the value of F</li>
   <ul>
    <li>By DeMorgan's theorem</li>
    <li>(A+B+C)' = (A+X)'	let B+C = X</li>
    <li>	= A'X' 			by theorem 5(a) (DeMorgan's)</li>
    <li>	= A'(B+C)'		substitute B+C = X</li>
    <li>	= A'(B'C')		<span style='mso-spacerun:yes'>            </span>	by
        theorem 5(a) (DeMorgan's)</li>
    <li>	= A'B'C'		<span style='mso-spacerun:yes'>               </span>by
        theorem 4(b) (associative)</li>
   </ul>
   <li>Generalizations: a function is obtained by interchanging AND and OR
       operators and complementing each literal.</li>
   <ul>
    <li>(A+B+C+D+ ... +F)' = A'B'C'D'... F'</li>
    <li>(ABCD ... F)' = A'+ B'+C'+D' ... +F'</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>27</font></div>
  </td>
  <td>
  <div id=PPTP27 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0099.htm');" id=PPTL27>Examples</a></font></div>
  <div id=PPTC27 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Example 2.2</li>
   <ul>
    <li>F<sub>1</sub>' = (x'yz' + x'y'z)' = (x'yz')' (x'y'z)' = (x+y'+z) (x+y+z')</li>
    <li>F<sub>2</sub>' = [x(y'z'+yz)]' = x' + (y'z'+yz)' = x' + (y'z')' (yz)</li>
    <li>		<span style='mso-spacerun:yes'>   </span>= x' + (y+z) (y'+z')</li>
    <li>	<span style='mso-spacerun:yes'>      </span>= x' + yz+y'z</li>
   </ul>
   <li>Example 2.3: a simpler procedure</li>
   <ul>
    <li>Take the dual of the function and complement each literal</li>
    <li>F<sub>1</sub> = x'yz' + x'y'z.</li>
    <li>	The dual of F<sub>1</sub> is (x'+y+z') (x'+y'+z).</li>
    <li>	 	Complement each literal: (x+y'+z)(x+y+z') = F<sub>1</sub>'</li>
    <li>F<sub>2</sub> = x(y' z' + yz).</li>
    <li>	The dual of F<sub>2</sub> is x+(y'+z') (y+z).</li>
    <li>	 	Complement each literal: x'+(y+z)(y' +z') = F<sub>2</sub>'</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>28</font></div>
  </td>
  <td>
  <div id=PPTP28 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0100.htm');" id=PPTL28>2.6	Canonical and
  Standard Forms</a></font></div>
  <div id=PPTC28 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Minterms and Maxterms</li>
   <li>A minterm (standard product): an AND term consists of all literals in
       their normal form or in their complement form.</li>
   <ul>
    <li>For example, two binary variables x and y,</li>
    <ul>
     <li>xy, xy', x'y, x'y'</li>
    </ul>
    <li>It is also called a standard product.</li>
    <li>n variables con be combined to form 2<sup>n </sup>minterms.</li>
   </ul>
   <li>A maxterm (standard sums): an OR term</li>
   <ul>
    <li>It is also call a standard sum.</li>
    <li>2<sup>n </sup>maxterms.</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>29</font></div>
  </td>
  <td>
  <div id=PPTP29 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0101.htm');" id=PPTL29>Minterms and Maxterms</a></font></div>
  <div id=PPTC29 class=CTxt style='display:none'><font size=2>
  <ul>
   <ul>
    <li>Each maxterm is the complement of its corresponding minterm, and vice
        versa.</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>30</font></div>
  </td>
  <td>
  <div id=PPTP30 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0102.htm');" id=PPTL30>Minterms and Maxterms</a></font></div>
  <div id=PPTC30 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>An Boolean function can be expressed by</li>
   <ul>
    <li>A truth table</li>
    <li>Sum of minterms</li>
    <li>f<sub>1</sub><sub> </sub>= x'y'z + xy'z' + xyz = m<sub>1 </sub>+ m<sub>4
        </sub>+m<sub>7</sub> (Minterms)</li>
    <li>f<sub>2</sub> = x'yz+ xy'z + xyz'+xyz = m<sub>3 </sub>+ m<sub>5 </sub>+m<sub>6</sub>
        + m<sub>7</sub> (Minterms)</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>31</font></div>
  </td>
  <td>
  <div id=PPTP31 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0103.htm');" id=PPTL31>Minterms and Maxterms</a></font></div>
  <div id=PPTC31 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>The complement of a Boolean function</li>
   <ul>
    <li>The minterms that produce a 0</li>
    <li>f<sub>1</sub>' = m<sub>0</sub> + m<sub>2 </sub>+m<sub>3</sub> + m<sub>5
        </sub>+ m<sub>6</sub>	 = x'y'z'+x'yz'+x'yz+xy'z+xyz'</li>
    <li>f<sub>1</sub> = (f<sub>1</sub>')'								= (x+y+z)(x+y'+z) (x+y'+z') (x'+y+z')(x'+y'+z)
        = M<sub>0</sub> M<sub>2 </sub>M<sub>3</sub> M<sub>5</sub> M<sub>6</sub></li>
    <li>f<sub>2</sub> = (x+y+z)(x+y+z')(x+y'+z)(x'+y+z)=M<sub>0</sub>M<sub>1</sub>M<sub>2</sub>M<sub>4</sub></li>
   </ul>
   <li>Any Boolean function can be expressed as</li>
   <ul>
    <li>A sum of minterms (sum meaning the ORing of terms).</li>
    <li>A product of maxterms (product meaning the ANDing of terms).</li>
    <li>Both boolean functions are said to be in Canonical form.</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>32</font></div>
  </td>
  <td>
  <div id=PPTP32 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0104.htm');" id=PPTL32>Sum of Minterms</a></font></div>
  <div id=PPTC32 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Sum of minterms: there are 2<sup>n</sup> minterms and 2<sup>2n</sup>
       combinations of function with n Boolean variables.</li>
   <li>Example 2.4: express F = A+BC' as a sum of minterms.</li>
   <ul>
    <li>F = A+B'C = A (B+B') + B'C = AB +AB' + B'C = AB(C+C') + AB'(C+C') + (A+A')B'C
        = ABC+ABC'+AB'C+AB'C'+A'B'C</li>
    <li>F = A'B'C +AB'C' +AB'C+ABC'+ ABC = m<sub>1</sub> + m<sub>4 </sub>+m<sub>5</sub>
        + m<sub>6 </sub>+ m<sub>7</sub></li>
    <li>F(A, B, C) =<span style='mso-spacerun:yes'>  </span>S(1, 4, 5, 6, 7)</li>
    <li>or, built the truth table first</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>33</font></div>
  </td>
  <td>
  <div id=PPTP33 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0105.htm');" id=PPTL33>Product of Maxterms</a></font></div>
  <div id=PPTC33 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Product of maxterms: using distributive law to expand.</li>
   <ul>
    <li>x + yz = (x + y)(x + z) = (x+y+zz')(x+z+yy') = (x+y+z)(x+y+z')(x+y'+z)</li>
   </ul>
   <li>Example 2.5: express F = xy + x'z as a product of maxterms.</li>
   <ul>
    <li>F = xy + x'z = (xy + x')(xy +z) = (x+x')(y+x')(x+z)(y+z) = (x'+y)(x+z)(y+z)</li>
    <li>x'+y = x' + y + zz' = (x'+y+z)(x'+y+z')</li>
    <li>F = (x+y+z)(x+y'+z)(x'+y+z)(x'+y+z') = M<sub>0</sub>M<sub>2</sub>M<sub>4</sub>M<sub>5</sub></li>
    <li>F(x, y, z) = P(0, 2, 4, 5)</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>34</font></div>
  </td>
  <td>
  <div id=PPTP34 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0106.htm');" id=PPTL34>Conversion between
  Canonical Forms</a></font></div>
  <div id=PPTC34 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>The complement of a function expressed as the sum of minterms equals the
       sum of minterms missing from the original function.</li>
   <ul>
    <li>F(A, B, C) = S(1, 4, 5, 6, 7)</li>
    <li>Thus, F'(A, B, C) = S(0, 2, 3)</li>
    <li>By DeMorgan's theorem</li>
    <li>	F(A, B, C) = P(0, 2, 3)</li>
    <li>	F'(A, B, C) =P (1, 4, 5, 6, 7)</li>
    <li>m<sub>j</sub>' = M<sub>j</sub></li>
    <li>Sum of minterms = product of maxterms</li>
    <li>Interchange the symbols S and P and list those numbers missing from the
        original form</li>
    <ul>
     <li>S of 1's</li>
     <li>P of 0's</li>
    </ul>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>35</font></div>
  </td>
  <td>
  <div id=PPTP35 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0107.htm');" id=PPTL35>&quot;Example&quot;</a></font></div>
  <div id=PPTC35 class=CTxt style='display:none'><font size=2>
  <ul>
   <li><span style='mso-spacerun:yes'> </span>Example</li>
   <ul>
    <li>F = xy + x<font face=Symbol>¢</font><font face=Arial>z</font></li>
    <li>F(x, y, z) = S(1, 3, 6, 7)</li>
    <li>F(x, y, z) = P (0, 2, 4, 6)</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>36</font></div>
  </td>
  <td>
  <div id=PPTP36 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0108.htm');" id=PPTL36>Standard Forms</a></font></div>
  <div id=PPTC36 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Canonical forms are very seldom the ones with the least number of
       literals.</li>
   <li>Standard forms: the terms that form the function may obtain one, two, or
       any number of literals.</li>
   <ul>
    <li>Sum of products: F<sub>1</sub><sub> </sub>= y' + xy+ x'yz'</li>
    <li>Product of sums: F<sub>2</sub> = x(y'+z)(x'+y+z')</li>
    <li>F<sub>3</sub> = A'B'CD+ABC'D'</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>37</font></div>
  </td>
  <td>
  <div id=PPTP37 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0109.htm');" id=PPTL37>Implementation</a></font></div>
  <div id=PPTC37 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Two-level implementation</li>
   <br>
   <br>
   <br>
   <br>
   <br>
   <br>
   <li>Multi-level implementation</li>
   <br>
   <br>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>38</font></div>
  </td>
  <td>
  <div id=PPTP38 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0110.htm');" id=PPTL38>2.7	Other Logic
  Operations (</a></font></div>
  <div id=PPTC38 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>2<sup>n</sup> rows in the truth table of n binary variables.</li>
   <li>2<sup>2</sup><sup>n</sup> functions for n binary variables.</li>
   <li>16 functions of two binary variables.</li>
   <br>
   <br>
   <br>
   <br>
   <br>
   <br>
   <br>
   <br>
   <li>All the new symbols except for the exclusive-OR symbol are not in common
       use by digital designers.</li>
   <br>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>39</font></div>
  </td>
  <td>
  <div id=PPTP39 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0111.htm');" id=PPTL39>Boolean Expressions</a></font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>40</font></div>
  </td>
  <td>
  <div id=PPTP40 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0112.htm');" id=PPTL40>2.8	Digital Logic Gates</a></font></div>
  <div id=PPTC40 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Boolean expression: AND, OR and NOT operations</li>
   <li>Constructing gates of other<span style='mso-spacerun:yes'>  </span>logic
       operations</li>
   <ul>
    <li>The feasibility and economy;</li>
    <li>The possibility of extending gate's inputs;</li>
    <li>The basic properties of the binary operations (commutative and
        associative);</li>
    <li>The ability of the gate to implement Boolean functions.</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>41</font></div>
  </td>
  <td>
  <div id=PPTP41 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0113.htm');" id=PPTL41>Standard Gates</a></font></div>
  <div id=PPTC41 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Consider the 16 functions in Table 2.8 (slide 33)</li>
   <ul>
    <li>Two are equal to a constant (F<sub>0</sub> and F<sub>15</sub>).</li>
    <li>Four are repeated twice (F<sub>4</sub>, F<sub>5</sub>,<span
        style='mso-spacerun:yes'>  </span>F<sub>10</sub> and F<sub>11</sub>).</li>
    <li>Inhibition (F<sub>2</sub>) and implication (F<sub>13</sub>) are not
        commutative or associative.</li>
    <li>The other eight: complement (F<sub>12</sub>), transfer (F<sub>3</sub>),
        AND (F<sub>1</sub>), OR (F<sub>7</sub>), NAND (F<sub>14</sub>), NOR (F<sub>8</sub>),
        XOR (F<sub>6</sub>), and equivalence (XNOR) (F<sub>9</sub>) are used as
        standard gates.</li>
    <li>Complement: inverter.</li>
    <li>Transfer: buffer (increasing drive strength).</li>
    <li>Equivalence: XNOR.</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>42</font></div>
  </td>
  <td>
  <div id=PPTP42 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0114.htm');" id=PPTL42>Summary of Logic Gates</a></font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>43</font></div>
  </td>
  <td>
  <div id=PPTP43 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0115.htm');" id=PPTL43><span
  style='mso-spacerun:yes'> </span></a></font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>44</font></div>
  </td>
  <td>
  <div id=PPTP44 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0116.htm');" id=PPTL44>Multiple Inputs</a></font></div>
  <div id=PPTC44 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Extension to multiple inputs</li>
   <ul>
    <li>A gate can be extended to multiple inputs.</li>
    <ul>
     <li>If its binary operation is commutative and associative.</li>
    </ul>
    <li>AND and OR are commutative and associative.</li>
    <ul>
     <li>OR</li>
     <ul>
      <li>x+y = y+x</li>
      <li>(x+y)+z = x+(y+z) = x+y+z</li>
     </ul>
     <li>AND</li>
     <ul>
      <li>xy = yx</li>
      <li>(x y)z = x(y z) = x y z</li>
     </ul>
    </ul>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>45</font></div>
  </td>
  <td>
  <div id=PPTP45 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0117.htm');" id=PPTL45>Multiple Inputs</a></font></div>
  <div id=PPTC45 class=CTxt style='display:none'><font size=2>
  <ul>
   <ul>
    <li>NAND and NOR are commutative but not associative &#8594; they are not
        extendable.</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>46</font></div>
  </td>
  <td>
  <div id=PPTP46 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0118.htm');" id=PPTL46>Multiple Inputs</a></font></div>
  <div id=PPTC46 class=CTxt style='display:none'><font size=2>
  <ul>
   <ul>
    <li>Multiple NOR = a complement of OR gate, Multiple NAND = a complement of
        AND.</li>
    <li>The cascaded NAND operations = sum of products.</li>
    <li>The cascaded NOR operations = product of sums.</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>47</font></div>
  </td>
  <td>
  <div id=PPTP47 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0119.htm');" id=PPTL47>Multiple Inputs</a></font></div>
  <div id=PPTC47 class=CTxt style='display:none'><font size=2>
  <ul>
   <ul>
    <li>The XOR and XNOR gates are commutative and associative.</li>
    <li>Multiple-input XOR gates are uncommon?</li>
    <li>XOR is an odd function: it is equal to 1 if the inputs variables have
        an odd number of 1's.</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>48</font></div>
  </td>
  <td>
  <div id=PPTP48 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0120.htm');" id=PPTL48>Positive and Negative
  Logic</a></font></div>
  <div id=PPTC48 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Positive and Negative Logic</li>
   <ul>
    <li>Two signal values &lt;=&gt; two logic values</li>
    <li>Positive logic: H=1; L=0</li>
    <li>Negative logic: H=0; L=1</li>
   </ul>
   <li>Consider a TTL gate</li>
   <ul>
    <li>A positive logic AND gate</li>
    <li>A negative logic OR gate</li>
    <li>The positive logic is used in this book</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>49</font></div>
  </td>
  <td>
  <div id=PPTP49 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0121.htm');" id=PPTL49>Positive and Negative
  Logic</a></font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>50</font></div>
  </td>
  <td>
  <div id=PPTP50 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0122.htm');" id=PPTL50>2.9	Integrated Circuits</a></font></div>
  <div id=PPTC50 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Level of Integration</li>
   <li>An IC (a chip)</li>
   <li>Examples:</li>
   <ul>
    <li>Small-scale Integration (SSI): &lt; 10 gates</li>
    <li>Medium-scale Integration (MSI): 10 ~ 100 gates</li>
    <li>Large-scale Integration (LSI): 100 ~ xk gates</li>
    <li>Very Large-scale Integration (VLSI): &gt; xk gates</li>
   </ul>
   <li>VLSI</li>
   <ul>
    <li>Small size (compact size)</li>
    <li>Low cost</li>
    <li>Low power consumption</li>
    <li>High reliability</li>
    <li>High speed</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>51</font></div>
  </td>
  <td>
  <div id=PPTP51 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0127.htm');" id=PPTL51>Digital Logic Families</a></font></div>
  <div id=PPTC51 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Digital logic families: circuit technology</li>
   <ul>
    <li>TTL: transistor-transistor logic (dying?)</li>
    <li>ECL: emitter-coupled logic (high speed, high power consumption)</li>
    <li>MOS: metal-oxide semiconductor (NMOS, high density)</li>
    <li>CMOS: complementary MOS (low power)</li>
    <li>BiCMOS: high speed, high density</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>52</font></div>
  </td>
  <td>
  <div id=PPTP52 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0128.htm');" id=PPTL52>Digital Logic Families</a></font></div>
  <div id=PPTC52 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>The characteristics of digital logic families</li>
   <ul>
    <li>Fan-out: the number of standard loads that the output of a typical gate
        can drive.</li>
    <li>Power dissipation.</li>
    <li>Propagation delay: the average transition delay time for the signal to
        propagate from input to output.</li>
    <li>Noise margin: the minimum of external noise voltage that caused an
        undesirable change in the circuit output.</li>
   </ul>
   <br>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>53</font></div>
  </td>
  <td>
  <div id=PPTP53 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0133.htm');" id=PPTL53>CAD</a></font></div>
  <div id=PPTC53 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>CAD  Computer-Aided Design</li>
   <ul>
    <li>Millions of transistors</li>
    <li>Computer-based representation and aid</li>
    <li>Automatic the design process</li>
    <li>Design entry</li>
    <ul>
     <li>Schematic capture</li>
     <li>HDL  Hardware Description Language</li>
     <ul>
      <li>Verilog, VHDL</li>
     </ul>
    </ul>
    <li>Simulation</li>
    <li>Physical realization</li>
    <ul>
     <li>ASIC, FPGA, PLD</li>
    </ul>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
 <tr onmouseover="Over(this)" onmouseout="Out(this)" onclick="Follow(this)"
  style='cursor:hand'>
  <td align=right valign=top>
  <div class=sldNum><font size=2>54</font></div>
  </td>
  <td>
  <div id=PPTP54 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0049.htm');" id=PPTL54>Chip Design</a></font></div>
  <div id=PPTC54 class=CTxt style='display:none'><font size=2>
  <ul>
   <li>Why is it better to have more gates on a single chip?</li>
   <ul>
    <li>Easier to build systems</li>
    <li>Lower power consumption</li>
    <li>Higher clock frequencies</li>
   </ul>
   <br>
   <li>What are the drawbacks of large circuits?</li>
   <ul>
    <li>Complex to design</li>
    <li>Chips have design constraints</li>
    <li>Hard to test</li>
   </ul>
   <br>
   <li>Need tools to help develop integrated circuits</li>
   <ul>
    <li>Computer Aided Design (CAD) tools</li>
    <li>Automate tedious steps of design process</li>
    <li>Hardware description language (HDL) describe circuits</li>
    <li>VHDL (see the lab) is one such system</li>
   </ul>
  </ul>
  </font></div>
  </td>
 </tr>
</table>



</div>

<div style='display:none'><a href=master22.htm></a><a href=master22.xml></a><a
href=preview.wmf></a><a href="master22_image001.png"></a><a href=master35.htm></a><a
href=master35.xml></a><a href="master35_image002.png"></a><a href=pres.xml></a><a
href=slide0001.htm></a><a href="master35_image003.gif"></a><a
href="master35_image004.gif"></a><a href=slide0009.htm></a><a
href="master22_image005.gif"></a><a href="master22_image006.gif"></a><a
href="master22_image007.gif"></a><a href=slide0086.htm></a><a
href=slide0087.htm></a><a href=slide0088.htm></a><a href=slide0010.htm></a><a
href="slide0010_image008.jpg"></a><a href="slide0010_image009.gif"></a><a
href=slide0015.htm></a><a href=slide0052.htm></a><a href=slide0089.htm></a><a
href=slide0089.xml></a><a href="slide0089_image010.gif"></a><a
href="slide0089_image011.gif"></a><a href="slide0089_image012.gif"></a><a
href="slide0089_image013.gif"></a><a href=slide0090.htm></a><a
href=slide0090.xml></a><a href="slide0090_image014.gif"></a><a
href=slide0091.htm></a><a href=slide0134.htm></a><a href=slide0055.htm></a><a
href="slide0055_image015.png"></a><a href="slide0055_image016.gif"></a><a
href=slide0059.htm></a><a href="slide0059_image017.gif"></a><a
href=slide0060.htm></a><a href="slide0060_image018.gif"></a><a
href=slide0061.htm></a><a href="slide0061_image019.gif"></a><a
href=slide0092.htm></a><a href="slide0092_image020.gif"></a><a
href=slide0056.htm></a><a href="slide0056_image021.gif"></a><a
href=slide0135.htm></a><a href=slide0135.xml></a><a
href="slide0135_image022.gif"></a><a href=slide0057.htm></a><a
href=slide0093.htm></a><a href=slide0094.htm></a><a href=slide0095.htm></a><a
href=slide0095.xml></a><a href="slide0095_image023.gif"></a><a
href=slide0096.htm></a><a href="slide0096_image024.wmz"></a><a
href="slide0096_image025.gif"></a><a href="slide0096_image026.png"></a><a
href="slide0096_image027.gif"></a><a href="slide0096_image028.png"></a><a
href="slide0096_image029.gif"></a><a href=slide0097.htm></a><a
href=slide0098.htm></a><a href=slide0099.htm></a><a href=slide0100.htm></a><a
href=slide0101.htm></a><a href="slide0101_image030.png"></a><a
href="slide0101_image031.gif"></a><a href=slide0102.htm></a><a
href="slide0102_image032.png"></a><a href="slide0102_image033.gif"></a><a
href=slide0103.htm></a><a href=slide0104.htm></a><a
href="slide0104_image034.png"></a><a href="slide0104_image035.gif"></a><a
href=slide0105.htm></a><a href=slide0106.htm></a><a href=slide0107.htm></a><a
href="slide0107_image036.png"></a><a href="slide0107_image037.gif"></a><a
href=slide0108.htm></a><a href=slide0109.htm></a><a
href="slide0109_image038.png"></a><a href="slide0109_image039.gif"></a><a
href="slide0109_image040.png"></a><a href="slide0109_image041.gif"></a><a
href=slide0110.htm></a><a href="slide0110_image042.png"></a><a
href="slide0110_image043.gif"></a><a href=slide0111.htm></a><a
href="slide0111_image044.png"></a><a href="slide0111_image045.gif"></a><a
href=slide0112.htm></a><a href=slide0113.htm></a><a href=slide0114.htm></a><a
href="slide0114_image046.wmz"></a><a href="slide0114_image047.gif"></a><a
href=slide0115.htm></a><a href="slide0115_image048.wmz"></a><a
href="slide0115_image049.gif"></a><a href=slide0116.htm></a><a
href=slide0117.htm></a><a href="slide0117_image050.png"></a><a
href="slide0117_image051.gif"></a><a href="slide0117_image052.png"></a><a
href="slide0117_image053.gif"></a><a href=slide0118.htm></a><a
href="slide0118_image054.png"></a><a href="slide0118_image055.gif"></a><a
href="slide0118_image056.png"></a><a href="slide0118_image057.gif"></a><a
href=slide0119.htm></a><a href="slide0119_image058.png"></a><a
href="slide0119_image059.gif"></a><a href=slide0120.htm></a><a
href="slide0120_image060.png"></a><a href="slide0120_image061.gif"></a><a
href="slide0120_image062.png"></a><a href="slide0120_image063.gif"></a><a
href=slide0121.htm></a><a href="slide0121_image064.png"></a><a
href="slide0121_image065.gif"></a><a href="slide0121_image066.png"></a><a
href="slide0121_image067.gif"></a><a href="slide0121_image068.png"></a><a
href="slide0121_image069.gif"></a><a href="slide0121_image070.png"></a><a
href="slide0121_image071.gif"></a><a href="slide0121_image072.png"></a><a
href="slide0121_image073.gif"></a><a href="slide0121_image074.png"></a><a
href="slide0121_image075.gif"></a><a href=slide0122.htm></a><a
href=slide0127.htm></a><a href=slide0128.htm></a><a href=slide0133.htm></a><a
href=slide0049.htm></a><a href=master01.htm></a><a
href="master22_stylesheet.css"></a><a href="master35_stylesheet.css"></a><a
href=script.js></a><a href="../Chapter_2_Boolean_Algebra_and_Logic_Gates.htm"></a><a
href=fullscreen.htm></a><a href=buttons.gif></a><a href=frame.htm></a><a
href=outline.htm></a></div>

</body>

</html>
